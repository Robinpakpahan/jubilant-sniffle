#include <iostream>

struct Node {
  int data;
  Node* next;
};

class LinkedList {
private:
  Node* head;

public:
  LinkedList() {
    head = nullptr;
  }

  void insert_at_beginning(int data) {
    Node* new_node = new Node;
    new_node->data = data;
    new_node->next = head;
    head = new_node;
  }

  void insert_at_end(int data) {
    Node* new_node = new Node;
    new_node->data = data;
    new_node->next = nullptr;

    if (head == nullptr) {
      head = new_node;
      return;
    }

    Node* current = head;
    while (current->next) {
      current = current->next;
    }
    current->next = new_node;
  }

  void delete_at_beginning() {
    if (head == nullptr) {
      std::cout << "Linked list is empty!" << std::endl;
      return;
    }

    Node* temp = head;
    head = head->next;
    delete temp;
  }

  void delete_at_end() {
    if (head == nullptr) {
      std::cout << "Linked list is empty!" << std::endl;
      return;
    }

    if (head->next == nullptr) {
      delete head;
      head = nullptr;
      return;
    }

    Node* current = head;
    Node* previous = nullptr;
    while (current->next) {
      previous = current;
      current = current->next;
    }
    previous->next = nullptr;
    delete current;
  }

  void print_list() {
    Node* current = head;
    while (current) {
      std::cout << current->data << " ";
      current = current->next;
    }
    std::cout << std::endl;
  }
};

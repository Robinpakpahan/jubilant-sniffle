#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;
};

// Fungsi untuk menambahkan node di awal linked list
void insertAtBeginning(Node** headRef, int newData) {
    Node* newNode = new Node();
    newNode->data = newData;
    newNode->next = *headRef;
    *headRef = newNode;
}

// Fungsi untuk menghapus node dengan nilai tertentu dari linked list
void deleteNode(Node** headRef, int key) {
    Node* temp = *headRef;
    Node* prev = nullptr;

    if (temp != nullptr && temp->data == key) {
        *headRef = temp->next;
        delete temp;
        return;
    }

    while (temp != nullptr && temp->data != key) {
        prev = temp;
        temp = temp->next;
    }

    if (temp == nullptr) return;

    prev->next = temp->next;
    delete temp;
}

// Fungsi untuk menampilkan linked list
void displayList(Node* node) {
    while (node != nullptr) {
        cout << node->data << " ";
        node = node->next;
    }
    cout << endl;
}

// Fungsi untuk mencari node dengan nilai tertentu dalam linked list
bool search(Node* head, int key) {
    Node* current = head;
    while (current != nullptr) {
        if (current->data == key) return true;
        current = current->next;
    }
    return false;
}

// Fungsi untuk membalik urutan linked list
void reverse(Node** headRef) {
    Node* prev = nullptr;
    Node* current = *headRef;
    Node* nextNode = nullptr;

    while (current != nullptr) {
        nextNode = current->next;
        current->next = prev;
        prev = current;
        current = nextNode;
    }
    *headRef = prev;
}

int main() {
    Node* head = nullptr;

    // Penyisipan di awal linked list
    insertAtBeginning(&head, 10);
    insertAtBeginning(&head, 20);
    insertAtBeginning(&head, 30);
    displayList(head); // Menampilkan linked list

    // Penghapusan node dengan nilai tertentu
    deleteNode(&head, 20);
    displayList(head);

    // Pencarian node dengan nilai tertentu
    cout << "Elemen 30 ditemukan? " << (search(head, 30) ? "Ya" : "Tidak") << endl;

    // Pembalikan urutan linked list
    reverse(&head);
    displayList(head);

    return 0;
}

Robin Charles Pakpahan
202332139
